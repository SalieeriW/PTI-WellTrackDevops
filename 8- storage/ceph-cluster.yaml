apiVersion: ceph.rook.io/v1
kind: CephCluster
metadata:
  name: rook-ceph
  namespace: rook-ceph # Namespace where Rook Ceph components will run
spec:
  # Specify the Ceph container image version
  cephVersion:
    image: quay.io/ceph/ceph:v18.2.0
  # Host path where Rook stores Ceph data and configuration
  dataDirHostPath: /var/lib/rook
  # Configure Ceph Monitors (MONs)
  mon:
    count: 1 # Number of monitors (use 3 or 5 for production HA)
    allowMultiplePerNode: true # Allow multiple MONs on the same node (for testing/dev)
  # Configure Ceph Managers (MGRs)
  mgr:
    count: 1 # Number of managers
    allowMultiplePerNode: true # Allow multiple MGRs on the same node (for testing/dev)
  # Enable the Ceph Dashboard
  dashboard:
    enabled: true
  # Configure the Ceph Crash Collector
  crashCollector:
    disable: false # Enable crash reporting
  # Define storage configuration for Ceph OSDs (Object Storage Daemons)
  storage:
    useAllNodes: true # Use all available nodes for OSDs
    useAllDevices: false # Do not automatically use all available devices (use storageClassDeviceSets instead)
    # Global OSD configuration settings
    config:
      storeType: bluestore # Use BlueStore backend for OSDs
      databaseSizeMB: "1024" # Size for BlueStore internal database
      journalSizeMB: "1024" # Size for BlueStore internal journal (write-ahead log)
    # Define how OSDs are provisioned using StorageClass
    storageClassDeviceSets:
    - name: set1 # Name of the device set
      count: 1 # Number of OSDs to create in this set
      portable: false # OSDs are not expected to move between nodes
      # Define resource requests/limits for OSD pods in this set
      resources:
        requests:
          cpu: 200m
          memory: 512Mi
        limits:
          memory: 1Gi
      # Use a PersistentVolumeClaim template to provision storage for OSDs
      volumeClaimTemplates:
      - metadata:
          name: data # Name of the PVC
        spec:
          resources:
            requests:
              storage: 10Gi # Request 10Gi storage per OSD
          # Use the 'standard' StorageClass provided by the underlying environment (e.g., Kind)
          storageClassName: standard
          volumeMode: Block # Use block storage
          accessModes:
          - ReadWriteOnce # Required access mode for OSD PVCs
  # Define default resource requests/limits for Ceph components
  resources:
    mon:
      requests:
        cpu: "100m"
        memory: "256Mi"
      limits:
        memory: "512Mi"
    mgr:
      requests:
        cpu: "100m"
        memory: "256Mi"
      limits:
        memory: "512Mi"