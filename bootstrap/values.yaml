# Valores globales que pueden ser heredados por los subcharts

# Standard Helm chart name and fullname overrides
nameOverride: ""
fullnameOverride: ""

global:
  # Dominio base para los servicios expuestos via Ingress
  domain: welltrack.local
  # StorageClass por defecto a usar por los PVCs
  storageClass: standard

# Control para habilitar o deshabilitar el despliegue de cada componente (subchart)
argo-cd:
  enabled: true # Habilitar despliegue de Argo CD

ingress:
  enabled: true # Habilitar despliegue de Nginx Ingress Controller

harbor:
  enabled: true # Habilitar despliegue de Harbor

database:
  enabled: true # Habilitar despliegue de PostgreSQL

monitoring:
  enabled: true # Habilitar despliegue de Prometheus Stack (incluye Grafana)

logging:
  enabled: true # Habilitar despliegue de Loki y Promtail

storage:
  enabled: true # Habilitar despliegue de Rook-Ceph

vault:
  enabled: true # Habilitar despliegue de Vault

cert-manager:
  enabled: true # Enable deployment of cert-manager

falco:
  enabled: true # Habilitar el desplegament de Falco

# Configuraci贸 de l'aplicaci贸 Backend
welltrackBackend:
  enabled: true # Enable deployment of the backend application
  namespace: welltrack # Target namespace for deploying backend resources
  source:
    repoURL: https://github.com/hongda-zhu/PTI-WellTrackGitOps.git 
    targetRevision: HEAD 
    path: charts/welltrack-backend 

# Configuraci贸 de l'aplicaci贸 Frontend
welltrackFrontend:
  enabled: true # Enable deployment of the frontend application
  namespace: welltrack # Target namespace (same as backend or different if needed)
  source:
    repoURL: https://github.com/hongda-zhu/PTI-WellTrackGitOps.git 
    targetRevision: HEAD 
    path: charts/welltrack-frontend

spec:
  destination:
    server: https://kubernetes.default.svc
  source:
    repoURL: https://github.com/hongda-zhu/PTI-WellTrackDevops.git
    targetRevision: HEAD
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
  project: default
  
  # Componentes a desplegar 
  ingress:
    enable: true
    namespace: ingress-nginx
    chart: ingress-nginx
    repoURL: https://kubernetes.github.io/ingress-nginx
    targetRevision: 4.7.1
    syncWave: 1
  
  harbor:
    enable: true
    namespace: harbor
    chart: harbor
    repoURL: https://helm.goharbor.io
    targetRevision: 1.12.2
    syncWave: 2
    
  database:
    enable: true
    namespace: database
    chart: postgresql
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: 12.2.2
    syncWave: 2
    
  monitoring:
    enable: true
    namespace: monitoring
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 45.27.2
    syncWave: 3
    
  logging:
    enable: true
    namespace: logging
    syncWave: 3
    loki:
      chart: loki
      repoURL: https://grafana.github.io/helm-charts
      targetRevision: 5.8.11
    promtail:
      chart: promtail
      repoURL: https://grafana.github.io/helm-charts
      targetRevision: 6.11.3
    
  storage:
    enable: true
    namespace: rook-ceph
    chart: rook-ceph
    repoURL: https://charts.rook.io/release
    targetRevision: 1.12.3
    syncWave: 1
    
  vault:
    enable: true
    namespace: vault
    chart: vault
    repoURL: https://helm.releases.hashicorp.com
    targetRevision: 0.25.0
    syncWave: 4

  cert-manager:
    enable: true
    namespace: cert-manager
    chart: cert-manager
    repoURL: https://charts.jetstack.io
    targetRevision: v1.17.2
    syncWave: 2

  falco:
    enable: true  
    namespace: falco 
    chart: falco 
    repoURL: https://falcosecurity.github.io/charts 
    targetRevision: 4.21.3 
    syncWave: 4 

  base-manifests:
    enable: true
    syncWave: 3

baseManifests:
  enabled: true
  syncWave: 3
  
grafanaDashboards:
  enabled: true
  syncWave: "5" 
  
  sourceRepo:
    url: "https://github.com/hongda-zhu/Grafana-Dashboards.git" 
    branch: "master" 
    pathPrefix: "" 

  active:
    - file: "falco-logs.json"
    - file: "falco-metrics.json"