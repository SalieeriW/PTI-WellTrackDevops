{{- if .Values.spec.monitoring.enable }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-stack
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "{{ .Values.spec.monitoring.syncWave }}"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.spec.project }}
  source:
    chart: {{ .Values.spec.monitoring.chart }}
    repoURL: {{ .Values.spec.monitoring.repoURL }}
    targetRevision: {{ .Values.spec.monitoring.targetRevision }}
    helm:
      values: |
{{ .Files.Get "values/monitoring.yaml" | indent 8 }}
  destination:
    server: {{ .Values.spec.destination.server }}
    namespace: {{ .Values.spec.monitoring.namespace }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      # Use Server-Side Apply to handle large CRDs
      - ServerSideApply=true
  # Ignore excessively large last-applied-configuration annotation for CRDs managed by this app
  ignoreDifferences:
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      jsonPointers:
        - /metadata/annotations/kubectl.kubernetes.io~1last-applied-configuration
{{- end }}
