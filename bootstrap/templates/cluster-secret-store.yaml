# PTI-WellTrackDevops/bootstrap/templates/cluster-secret-store.yaml
{{- if .Values.vault.enabled }} {{- /* Only create if Vault itself is enabled */}}
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: vault-backend # The name expected by the ExternalSecrets
  # Optional: Add annotations or labels if needed
spec:
  provider:
    vault:
      # Vault Server URL
      server: {{ .Values.vault.serverUrl | default "http://vault.vault.svc.cluster.local:8200" | quote }}
      
      # Path where the Kubernetes authentication backend is mounted in Vault
      # Check your Vault setup - common defaults are "kubernetes"
      path: {{ .Values.vault.authPath | default "kubernetes" | quote }}
      
      # Version of the Key-Value secrets engine (v1 or v2)
      # Adjust if you are using KV v1
      version: {{ .Values.vault.kvVersion | default "v2" | quote }}
      
      # Authentication method: Kubernetes Service Account
      auth:
        kubernetes:
          # Vault Role that the External Secrets Operator service account should assume
          # This role must be pre-configured in Vault to allow access to the necessary secret paths
          role: {{ .Values.vault.externalSecretsRole | default "external-secrets" | quote }}
          
          # Mount path of the Kubernetes auth method in Vault
          # Must match the path configured in Vault
          mountPath: {{ .Values.vault.authPath | default "kubernetes" | quote }}
          
          # Reference to the service account used by the External Secrets Operator pods
          # IMPORTANT: Adjust if the ESO service account name or namespace is different
          serviceAccountRef:
            name: {{ .Values.externalSecrets.serviceAccountName | default "external-secrets" }} # Assumes ESO chart creates a service account with this name
            namespace: {{ .Values.externalSecrets.namespace | default "external-secrets" }} # Namespace where ESO is running
{{- end }} 