alertmanager:
  # Deshabilitar Alertmanager inicialmente para ahorrar recursos
  enabled: true

grafana:
  # Habilitar Grafana para visualización de dashboards
  enabled: true
  ingress:
    # Habilitar Ingress para la UI de Grafana
    enabled: true
    # Añade o modifica las anotaciones existentes
    annotations:
      # Esta anotación le dice a cert-manager que use este ClusterIssuer para este Ingress
      cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
    # Especificar la IngressClass (ej. nginx)
    ingressClassName: nginx
    # Definir el nombre de host para acceder a Grafana vía Ingress
    hosts:
      - grafana.welltrack.local
    # Añade esta sección TLS
    tls:
      - hosts:
          - grafana.welltrack.local
        # El nombre del Secret que cert-manager creará y gestionará.
        secretName: grafana-tls
  # Define datasources adicionales para Grafana
  additionalDataSources:
    - name: Loki # Nombre que aparecerá en Grafana
      type: loki # Tipo de datasource
      url: http://loki-gateway.logging.svc.cluster.local # URL interna del servicio Loki Gateway
      access: proxy # Modo de acceso (Grafana actúa como proxy)
      isDefault: false # Opcional: poner a true si quieres que sea la fuente por defecto para logs
  persistence:
    # Habilitar almacenamiento persistente para datos de Grafana (dashboards, usuarios, etc.)
    enabled: true
    # Especificar la StorageClass para el PVC de Grafana
    storageClassName: "standard"
    # Definir el tamaño del volumen persistente
    size: 2Gi
  # Definir solicitudes de recursos para los pods de Grafana
  resources:
    requests:
      cpu: 100m
      memory: 128Mi

# Deshabilitar monitorización de componentes core de Kubernetes para ahorrar recursos en entorno local
kubeControllerManager:
  enabled: false
kubeEtcd:
  enabled: false
kubeScheduler:
  enabled: false

prometheus:

  enabled: true
  ingress:
    # Habilitar Ingress para la UI de Prometheus
    enabled: true
    # Añade o modifica las anotaciones existentes
    annotations:
      # Esta anotación le dice a cert-manager que use este ClusterIssuer para este Ingress
      cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
    # Especificar la IngressClass (ej. nginx)
    ingressClassName: nginx
    # Definir el nombre de host para acceder a Prometheus vía Ingress
    hosts:
      - prometheus.welltrack.local
    # Añade esta sección TLS
    tls:
      - hosts:
          - prometheus.welltrack.local
        # El nombre del Secret que cert-manager creará y gestionará.
        secretName: prometheus-tls

  prometheusSpec:
    # Configuración para el almacenamiento de datos de Prometheus
    storageSpec:
      volumeClaimTemplate:
        spec:
          # Especificar la StorageClass para el PVC de Prometheus
          storageClassName: "standard"
          resources:
            requests:
              # Definir el tamaño del volumen persistente para datos de Prometheus
              storage: 10Gi
    # Definir solicitudes y límites de recursos para los pods de Prometheus
    resources:
      requests:
        cpu: 300m
        memory: 750Mi
      limits:
        cpu: 1000m
        memory: 1500Mi

# Configuración para el Operador de Prometheus
prometheusOperator:
  # Definir solicitudes de recursos para los pods del Operador de Prometheus
  resources:
    requests:
      cpu: 100m
      memory: 128Mi