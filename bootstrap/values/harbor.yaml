expose:
  # Cómo exponer el servicio Harbor
  type: ingress
  # Configuración de Ingress si type=ingress
  ingress:
    # Nombres de host para acceder a Harbor Core API/UI
    hosts:
      core: harbor.welltrack.local
    # Clase de Ingress a utilizar
    className: nginx
    # Anotaciones específicas del Ingress Controller
    annotations:
      # Esta anotación le dice a cert-manager que use este ClusterIssuer
      cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
      # Asegurarse de que Nginx no redirija a HTTP si manejamos TLS
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
  # Configuración TLS para Ingress (habilitado)
  tls:
    enabled: true # Habilitar TLS
    # Nombre del Secret que cert-manager creará y gestionará
    secretName: harbor-tls
    # No necesitamos especificar certSource: secret, cert-manager lo gestiona

# URL externa utilizada por Harbor (ej. en correos electrónicos, webhooks)
# Actualizar a HTTPS
externalURL: https://harbor.welltrack.local

# Deshabilitar la persistencia para simplificar el entorno de pruebas/desarrollo
persistence:
  enabled: false

# Deshabilitar Trivy (escáner de vulnerabilidades) para ahorrar recursos
trivy:
  enabled: false

# Deshabilitar Notary (firma de imágenes) para simplificar la configuración
notary:
  enabled: false

# Configuración de recursos para el componente Portal (UI)
portal:
  resources:
    requests:
      cpu: 100m
      memory: 256Mi

# Configuración de recursos para el componente Core (API principal)
core:
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
  # Deshabilitar protección XSRF (simplifica acceso API, NO RECOMENDADO en producción)
  xsrfKey: ""
  # Nombre del secreto para XSRF (vacío si está deshabilitado)
  secretName: ""

# Configuración de recursos para el componente JobService (tareas en segundo plano)
jobservice:
  resources:
    requests:
      cpu: 100m
      memory: 256Mi

# Configuración de recursos para el componente Registry (almacén de imágenes)
registry:
  resources:
    requests:
      cpu: 100m
      memory: 512Mi

# Configuración de Redis interno
redis:
  internal:
    # Deshabilitar persistencia para Redis
    persistence:
      enabled: false

# Configuración de la base de datos
database:
  # Usar la base de datos PostgreSQL interna desplegada por el chart
  type: internal
  # Configuración específica de la base de datos interna
  internal:
    # Contraseña para la base de datos interna (¡CAMBIAR EN PRODUCCIÓN!)
    password: "Harbor12345"
    # Deshabilitar persistencia para la base de datos interna
    persistence:
      enabled: false

# Nivel de log para los componentes de Harbor (útil para depuración)
logLevel: debug